/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Floppy, FloppyInterface } from "../../contracts/Floppy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526012600a6200001491906200097c565b640ba43b7400620000269190620009cd565b6006553480156200003657600080fd5b50604051620023e9380380620023e983398181016040528101906200005c919062000a82565b806040518060400160405280600681526020017f466c6f70707900000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f464c5000000000000000000000000000000000000000000000000000000000008152508160039081620000da919062000d24565b508060049081620000ec919062000d24565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001645760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200015b919062000e1c565b60405180910390fd5b6200017581620001ec60201b60201c565b50620001c06040518060400160405280601481526020017f6f776e65723a202573206d61786361703a20257300000000000000000000000081525033600654620002b260201b60201c565b620001d4336006546200035b60201b60201c565b620001e533620003e860201b60201c565b5062000fe1565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000356838383604051602401620002cd9392919062000ed9565b6040516020818303038152906040527f0d26b925000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200048160201b60201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003d05760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620003c7919062000e1c565b60405180910390fd5b620003e460008383620004aa60201b60201c565b5050565b620003f8620006da60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200046d5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000464919062000e1c565b60405180910390fd5b6200047e81620001ec60201b60201c565b50565b620004a781620004a26200077c60201b620006da176200079d60201b60201c565b60201c565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000500578060026000828254620004f3919062000f1d565b92505081905550620005d6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200058f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620005869392919062000f58565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200062157806002600082825403925050819055506200066e565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620006cd919062000f95565b60405180910390a3505050565b620006ea620007b160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1662000710620007b960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200077a576200073c620007b160201b60201c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040162000771919062000e1c565b60405180910390fd5b565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b620007e360201b62000eea17819050919050565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b620007ed62000fb2565b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200087d57808604811115620008555762000854620007ef565b5b6001851615620008655780820291505b808102905062000875856200081e565b945062000835565b94509492505050565b6000826200089857600190506200096b565b81620008a857600090506200096b565b8160018114620008c15760028114620008cc5762000902565b60019150506200096b565b60ff841115620008e157620008e0620007ef565b5b8360020a915084821115620008fb57620008fa620007ef565b5b506200096b565b5060208310610133831016604e8410600b84101617156200093c5782820a905083811115620009365762000935620007ef565b5b6200096b565b6200094b84848460016200082b565b92509050818404811115620009655762000964620007ef565b5b81810290505b9392505050565b6000819050919050565b6000620009898262000972565b9150620009968362000972565b9250620009c57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000886565b905092915050565b6000620009da8262000972565b9150620009e78362000972565b9250828202620009f78162000972565b9150828204841483151762000a115762000a10620007ef565b5b5092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a4a8262000a1d565b9050919050565b62000a5c8162000a3d565b811462000a6857600080fd5b50565b60008151905062000a7c8162000a51565b92915050565b60006020828403121562000a9b5762000a9a62000a18565b5b600062000aab8482850162000a6b565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000b3657607f821691505b60208210810362000b4c5762000b4b62000aee565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000bb67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000b77565b62000bc2868362000b77565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000c0562000bff62000bf98462000972565b62000bda565b62000972565b9050919050565b6000819050919050565b62000c218362000be4565b62000c3962000c308262000c0c565b84845462000b84565b825550505050565b600090565b62000c5062000c41565b62000c5d81848462000c16565b505050565b5b8181101562000c855762000c7960008262000c46565b60018101905062000c63565b5050565b601f82111562000cd45762000c9e8162000b52565b62000ca98462000b67565b8101602085101562000cb9578190505b62000cd162000cc88562000b67565b83018262000c62565b50505b505050565b600082821c905092915050565b600062000cf96000198460080262000cd9565b1980831691505092915050565b600062000d14838362000ce6565b9150826002028217905092915050565b62000d2f8262000ab4565b67ffffffffffffffff81111562000d4b5762000d4a62000abf565b5b62000d57825462000b1d565b62000d6482828562000c89565b600060209050601f83116001811462000d9c576000841562000d87578287015190505b62000d93858262000d06565b86555062000e03565b601f19841662000dac8662000b52565b60005b8281101562000dd65784890151825560018201915060208501945060208101905062000daf565b8683101562000df6578489015162000df2601f89168262000ce6565b8355505b6001600288020188555050505b505050505050565b62000e168162000a3d565b82525050565b600060208201905062000e33600083018462000e0b565b92915050565b600082825260208201905092915050565b60005b8381101562000e6a57808201518184015260208101905062000e4d565b60008484015250505050565b6000601f19601f8301169050919050565b600062000e948262000ab4565b62000ea0818562000e39565b935062000eb281856020860162000e4a565b62000ebd8162000e76565b840191505092915050565b62000ed38162000972565b82525050565b6000606082019050818103600083015262000ef5818662000e87565b905062000f06602083018562000e0b565b62000f15604083018462000ec8565b949350505050565b600062000f2a8262000972565b915062000f378362000972565b925082820190508082111562000f525762000f51620007ef565b5b92915050565b600060608201905062000f6f600083018662000e0b565b62000f7e602083018562000ec8565b62000f8d604083018462000ec8565b949350505050565b600060208201905062000fac600083018462000ec8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b6113f88062000ff16000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a082311161009757806395d89b411161006657806395d89b4114610260578063a9059cbb1461027e578063dd62ed3e146102ae578063f2fde38b146102de576100f5565b806370a08231146101ec578063715018a61461021c57806379cc6790146102265780638da5cb5b14610242576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806340c10f19146101b457806342966c68146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b6101026102fa565b60405161010f9190610f84565b60405180910390f35b610132600480360381019061012d919061103f565b61038c565b60405161013f919061109a565b60405180910390f35b6101506103af565b60405161015d91906110c4565b60405180910390f35b610180600480360381019061017b91906110df565b6103b9565b60405161018d919061109a565b60405180910390f35b61019e6103e8565b6040516101ab919061114e565b60405180910390f35b6101ce60048036038101906101c9919061103f565b6103f1565b005b6101ea60048036038101906101e59190611169565b61045e565b005b61020660048036038101906102019190611196565b610472565b60405161021391906110c4565b60405180910390f35b6102246104ba565b005b610240600480360381019061023b919061103f565b6104ce565b005b61024a6104ee565b60405161025791906111d2565b60405180910390f35b610268610518565b6040516102759190610f84565b60405180910390f35b6102986004803603810190610293919061103f565b6105aa565b6040516102a5919061109a565b60405180910390f35b6102c860048036038101906102c391906111ed565b6105cd565b6040516102d591906110c4565b60405180910390f35b6102f860048036038101906102f39190611196565b610654565b005b6060600380546103099061125c565b80601f01602080910402602001604051908101604052809291908181526020018280546103359061125c565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905090565b6000806103976106fb565b90506103a4818585610703565b600191505092915050565b6000600254905090565b6000806103c46106fb565b90506103d1858285610715565b6103dc8585856107a9565b60019150509392505050565b60006012905090565b6103f961089d565b600654816104056103af565b61040f91906112bc565b1115610450576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104479061133c565b60405180910390fd5b61045a8282610924565b5050565b61046f6104696106fb565b826109a6565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104c261089d565b6104cc6000610a28565b565b6104e0826104da6106fb565b83610715565b6104ea82826109a6565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105279061125c565b80601f01602080910402602001604051908101604052809291908181526020018280546105539061125c565b80156105a05780601f10610575576101008083540402835291602001916105a0565b820191906000526020600020905b81548152906001019060200180831161058357829003601f168201915b5050505050905090565b6000806105b56106fb565b90506105c28185856107a9565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61065c61089d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ce5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106c591906111d2565b60405180910390fd5b6106d781610a28565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600033905090565b6107108383836001610aee565b505050565b600061072184846105cd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107a35781811015610793578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161078a9392919061135c565b60405180910390fd5b6107a284848484036000610aee565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361081b5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161081291906111d2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161088491906111d2565b60405180910390fd5b610898838383610cc5565b505050565b6108a56106fb565b73ffffffffffffffffffffffffffffffffffffffff166108c36104ee565b73ffffffffffffffffffffffffffffffffffffffff1614610922576108e66106fb565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161091991906111d2565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109965760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161098d91906111d2565b60405180910390fd5b6109a260008383610cc5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a185760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a0f91906111d2565b60405180910390fd5b610a2482600083610cc5565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b605760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b5791906111d2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bd25760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bc991906111d2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cbf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cb691906110c4565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d17578060026000828254610d0b91906112bc565b92505081905550610dea565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610da3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d9a9392919061135c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e335780600260008282540392505081905550610e80565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610edd91906110c4565b60405180910390a3505050565b610ef2611393565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f2e578082015181840152602081019050610f13565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f5682610ef4565b610f608185610eff565b9350610f70818560208601610f10565b610f7981610f3a565b840191505092915050565b60006020820190508181036000830152610f9e8184610f4b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fd682610fab565b9050919050565b610fe681610fcb565b8114610ff157600080fd5b50565b60008135905061100381610fdd565b92915050565b6000819050919050565b61101c81611009565b811461102757600080fd5b50565b60008135905061103981611013565b92915050565b6000806040838503121561105657611055610fa6565b5b600061106485828601610ff4565b92505060206110758582860161102a565b9150509250929050565b60008115159050919050565b6110948161107f565b82525050565b60006020820190506110af600083018461108b565b92915050565b6110be81611009565b82525050565b60006020820190506110d960008301846110b5565b92915050565b6000806000606084860312156110f8576110f7610fa6565b5b600061110686828701610ff4565b935050602061111786828701610ff4565b92505060406111288682870161102a565b9150509250925092565b600060ff82169050919050565b61114881611132565b82525050565b6000602082019050611163600083018461113f565b92915050565b60006020828403121561117f5761117e610fa6565b5b600061118d8482850161102a565b91505092915050565b6000602082840312156111ac576111ab610fa6565b5b60006111ba84828501610ff4565b91505092915050565b6111cc81610fcb565b82525050565b60006020820190506111e760008301846111c3565b92915050565b6000806040838503121561120457611203610fa6565b5b600061121285828601610ff4565b925050602061122385828601610ff4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061127457607f821691505b6020821081036112875761128661122d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112c782611009565b91506112d283611009565b92508282019050808211156112ea576112e961128d565b5b92915050565b7f466c6f7070793a20636170206578636565646564000000000000000000000000600082015250565b6000611326601483610eff565b9150611331826112f0565b602082019050919050565b6000602082019050818103600083015261135581611319565b9050919050565b600060608201905061137160008301866111c3565b61137e60208301856110b5565b61138b60408301846110b5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220233ed3ed5838f4d11c0b2c922bfa9b88fbde569d4039739402de2f1adbecf9e864736f6c63430008180033";

type FloppyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FloppyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Floppy__factory extends ContractFactory {
  constructor(...args: FloppyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      Floppy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Floppy__factory {
    return super.connect(runner) as Floppy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FloppyInterface {
    return new Interface(_abi) as FloppyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Floppy {
    return new Contract(address, _abi, runner) as unknown as Floppy;
  }
}
